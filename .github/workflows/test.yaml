name: test
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubicloud-standard-2-arm]
        postgres: [15]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal --no-self-update
      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4
      - name: Cache cargo deps
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            lantern_cli
            lantern_extras
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Setup test env
        run: sudo su -c "PG_VERSION=$PG_VERSION SETUP_POSTGRES=1 SETUP_TESTS=1 ./ci/scripts/build.sh"
        env:
          PG_VERSION: ${{ matrix.postgres }}
      - name: Install extension
        run: |
          cargo install cargo-pgrx --version 0.11.3
          cargo pgrx init "--pg$PG_VERSION" /usr/bin/pg_config
          RUSTFLAGS="--cfg profile=\"ci-build\"" cargo pgrx install --sudo --pg-config /usr/bin/pg_config --package lantern_extras
        env:
          PG_VERSION: ${{ matrix.postgres }}
      - name: Run postgres
        run: RUN_POSTGRES=1 ./ci/scripts/build.sh
        env:
          PG_VERSION: ${{ matrix.postgres }}
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Run tests
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
        env:
          OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
          COHERE_TOKEN: ${{ secrets.COHERE_TOKEN }}
          DB_URL: "postgres://postgres@127.0.0.1:5432/postgres"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: lcov.info
          fail_ci_if_error: true
